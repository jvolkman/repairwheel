diff --git a/src/repairwheel/_vendor/delocate/cmd/common.py b/src/repairwheel/_vendor/delocate/cmd/common.py
index d4457e4..f0c26a9 100644
--- a/src/repairwheel/_vendor/delocate/cmd/common.py
+++ b/src/repairwheel/_vendor/delocate/cmd/common.py
@@ -14,8 +14,8 @@ from typing import Callable, Iterable, Iterator, List
 
 from typing_extensions import Literal, TypedDict
 
-from delocate import __version__
-from delocate.delocating import filter_system_libs
+from .. import __version__
+from ..delocating import filter_system_libs
 
 logger = logging.getLogger(__name__)
 
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_addplat.py b/src/repairwheel/_vendor/delocate/cmd/delocate_addplat.py
index f858fe3..df0fef0 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_addplat.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_addplat.py
@@ -21,8 +21,8 @@ from argparse import ArgumentParser
 from os.path import expanduser, realpath
 from os.path import join as exists
 
-from delocate.cmd.common import common_parser, glob_paths, verbosity_config
-from delocate.wheeltools import WheelToolsError, add_platforms
+from ..cmd.common import common_parser, glob_paths, verbosity_config
+from ..wheeltools import WheelToolsError, add_platforms
 
 parser = ArgumentParser(description=__doc__, parents=[common_parser])
 parser.add_argument(
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_fuse.py b/src/repairwheel/_vendor/delocate/cmd/delocate_fuse.py
index 80d46a1..e6025cc 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_fuse.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_fuse.py
@@ -10,8 +10,8 @@ from argparse import ArgumentParser
 from os.path import abspath, basename, expanduser
 from os.path import join as pjoin
 
-from delocate.cmd.common import common_parser, verbosity_config
-from delocate.fuse import fuse_wheels
+from ..cmd.common import common_parser, verbosity_config
+from ..fuse import fuse_wheels
 
 parser = ArgumentParser(description=__doc__, parents=[common_parser])
 parser.add_argument(
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_listdeps.py b/src/repairwheel/_vendor/delocate/cmd/delocate_listdeps.py
index e9bc691..558adc4 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_listdeps.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_listdeps.py
@@ -9,10 +9,10 @@ from os import getcwd
 from os.path import isdir, realpath
 from os.path import sep as psep
 
-from delocate import wheel_libs
-from delocate.cmd.common import common_parser, glob_paths, verbosity_config
-from delocate.delocating import filter_system_libs
-from delocate.libsana import stripped_lib_dict, tree_libs_from_directory
+from .. import wheel_libs
+from ..cmd.common import common_parser, glob_paths, verbosity_config
+from ..delocating import filter_system_libs
+from ..libsana import stripped_lib_dict, tree_libs_from_directory
 
 parser = ArgumentParser(description=__doc__, parents=[common_parser])
 parser.add_argument(
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_patch.py b/src/repairwheel/_vendor/delocate/cmd/delocate_patch.py
index 07c2f7d..3ea52e0 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_patch.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_patch.py
@@ -11,8 +11,8 @@ from argparse import ArgumentParser
 from os.path import basename, exists, expanduser
 from os.path import join as pjoin
 
-from delocate import patch_wheel
-from delocate.cmd.common import common_parser, verbosity_config
+from .. import patch_wheel
+from ..cmd.common import common_parser, verbosity_config
 
 parser = ArgumentParser(description=__doc__, parents=[common_parser])
 parser.add_argument(
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_path.py b/src/repairwheel/_vendor/delocate/cmd/delocate_path.py
index a2dd101..8e303ea 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_path.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_path.py
@@ -7,8 +7,8 @@ from __future__ import absolute_import, division, print_function
 import os
 from argparse import ArgumentParser
 
-from delocate import delocate_path
-from delocate.cmd.common import (
+from .. import delocate_path
+from ..cmd.common import (
     common_parser,
     delocate_parser,
     delocate_values,
diff --git a/src/repairwheel/_vendor/delocate/cmd/delocate_wheel.py b/src/repairwheel/_vendor/delocate/cmd/delocate_wheel.py
index ebf2918..e28aac3 100755
--- a/src/repairwheel/_vendor/delocate/cmd/delocate_wheel.py
+++ b/src/repairwheel/_vendor/delocate/cmd/delocate_wheel.py
@@ -12,8 +12,8 @@ from os.path import basename, exists, expanduser
 from os.path import join as pjoin
 from typing import List, Optional, Text
 
-from delocate import delocate_wheel
-from delocate.cmd.common import (
+from .. import delocate_wheel
+from ..cmd.common import (
     common_parser,
     delocate_parser,
     delocate_values,
diff --git a/src/repairwheel/_vendor/delocate/delocating.py b/src/repairwheel/_vendor/delocate/delocating.py
index 38c2fde..d873622 100644
--- a/src/repairwheel/_vendor/delocate/delocating.py
+++ b/src/repairwheel/_vendor/delocate/delocating.py
@@ -7,6 +7,7 @@ import functools
 import logging
 import os
 import shutil
+import stat
 import warnings
 from os.path import abspath, basename, dirname, exists, realpath, relpath
 from os.path import join as pjoin
@@ -56,6 +57,11 @@ class DelocationError(Exception):
     pass
 
 
+def posix_relpath(path: str, start: str = None) -> str:
+    rel = relpath(path, start)
+    return Path(rel).as_posix()
+
+
 def delocate_tree_libs(
     lib_dict: Mapping[Text, Mapping[Text, Text]],
     lib_path: Text,
@@ -157,7 +163,7 @@ def _analyze_tree_libs(
             # @rpath, etc, at this point should never happen.
             raise DelocationError("%s was expected to be resolved." % required)
         r_ed_base = basename(required)
-        if relpath(required, rp_root_path).startswith(".."):
+        if Path(rp_root_path) not in Path(required).parents:
             # Not local, plan to copy
             if r_ed_base in copied_basenames:
                 raise DelocationError(
@@ -202,6 +208,9 @@ def _copy_required_libs(
             "Copying library %s to %s", old_path, relpath(new_path, root_path)
         )
         shutil.copy(old_path, new_path)
+        statinfo = os.stat(new_path)
+        if not statinfo.st_mode & stat.S_IWRITE:
+            os.chmod(new_path, statinfo.st_mode | stat.S_IWRITE)
         # Delocate this file now that it is stored locally.
         needs_delocating.add(new_path)
         # Update out_lib_dict with the new file paths.
@@ -224,7 +233,7 @@ def _update_install_names(
     for required in files_to_delocate:
         # Set relative path for local library
         for requiring, orig_install_name in lib_dict[required].items():
-            req_rel = relpath(required, dirname(requiring))
+            req_rel = posix_relpath(required, dirname(requiring))
             new_install_name = "@loader_path/" + req_rel
             if orig_install_name == new_install_name:
                 logger.info(
@@ -402,6 +411,8 @@ def _dylibs_only(filename: str) -> bool:
 
 
 def filter_system_libs(libname: str) -> bool:
+    _, libname = os.path.splitdrive(libname)
+    libname = Path(libname).as_posix()
     return not (libname.startswith("/usr/lib") or libname.startswith("/System"))
 
 
@@ -701,7 +712,7 @@ def delocate_wheel(
         ]
         _make_install_name_ids_unique(
             libraries=libraries_in_lib_path,
-            install_id_prefix=DLC_PREFIX + relpath(lib_sdir, wheel_dir),
+            install_id_prefix=DLC_PREFIX + posix_relpath(lib_sdir, wheel_dir),
         )
         rewrite_record(wheel_dir)
         if len(copied_libs) or not in_place:
diff --git a/src/repairwheel/_vendor/delocate/libsana.py b/src/repairwheel/_vendor/delocate/libsana.py
index 3cde5ca..6e1e15b 100644
--- a/src/repairwheel/_vendor/delocate/libsana.py
+++ b/src/repairwheel/_vendor/delocate/libsana.py
@@ -9,6 +9,7 @@ import sys
 import warnings
 from os.path import basename, dirname, realpath
 from os.path import join as pjoin
+from pathlib import Path
 from typing import (
     Callable,
     Dict,
@@ -21,7 +22,7 @@ from typing import (
     Tuple,
 )
 
-import delocate.delocating
+from . import delocating
 
 from .tmpdirs import TemporaryDirectory
 from .tools import (
@@ -41,6 +42,8 @@ class DependencyNotFound(Exception):
 
 
 def _filter_system_libs(libname: Text) -> bool:
+    _, libname = os.path.splitdrive(libname)
+    libname = Path(libname).as_posix()
     return not (libname.startswith("/usr/lib") or libname.startswith("/System"))
 
 
@@ -317,7 +320,7 @@ def _tree_libs_from_libraries(
     if missing_libs and not ignore_missing:
         # get_dependencies will already have logged details of missing
         # libraries.
-        raise delocate.delocating.DelocationError(
+        raise delocating.DelocationError(
             "Could not find all dependencies."
         )
 
diff --git a/src/repairwheel/_vendor/delocate/wheeltools.py b/src/repairwheel/_vendor/delocate/wheeltools.py
index 575f032..41c2280 100644
--- a/src/repairwheel/_vendor/delocate/wheeltools.py
+++ b/src/repairwheel/_vendor/delocate/wheeltools.py
@@ -17,8 +17,7 @@ from typing import Iterable, Optional, Union, overload
 
 from packaging.utils import parse_wheel_filename
 
-from delocate.pkginfo import read_pkg_info, write_pkg_info
-
+from .pkginfo import read_pkg_info, write_pkg_info
 from .tmpdirs import InTemporaryDirectory
 from .tools import dir2zip, open_rw, unique_by_index, zip2dir
 
