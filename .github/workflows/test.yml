name: test

on:
  push:
    branches:
    - main
  pull_request:
    branches:
    - main

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

# env:
#   STABLE_PYTHON_VERSION: '3.11'
#   PYTHONUNBUFFERED: "1"
#   FORCE_COLOR: "1"

jobs:
  matrix-test:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: Install Hatch
      run: python -m pip install hatch

    - name: Run tests
      run: hatch run test:test

  patch:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: Install Hatch
      run: python -m pip install hatch

    - name: Run tests
      env:
        TESTWHEEL_GENERATE_PATH: ${{ runner.temp }}/testwheel-out/${{ matrix.python-version }}/${{ matrix.os }}
      run: hatch run test:generate

    - uses: actions/upload-artifact@v3
      with:
        name: patched-testwheel
        path: ${{ runner.temp }}/testwheel-out

  check:
    name: Python ${{ matrix.python-version }} on ${{ startsWith(matrix.os, 'macos-') && 'macOS' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    needs: patch

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.11']

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Ensure latest pip
      run: python -m pip install --upgrade pip

    - name: Install Hatch
      run: python -m pip install hatch

    - uses: actions/download-artifact@v3
      with:
        name: patched-testwheel
        path: ${{ runner.temp }}/testwheel-out

    - name: Run tests
      env:
        TESTWHEEL_GENERATE_PATH: ${{ runner.temp }}/testwheel-out/
      run: hatch run test:check
